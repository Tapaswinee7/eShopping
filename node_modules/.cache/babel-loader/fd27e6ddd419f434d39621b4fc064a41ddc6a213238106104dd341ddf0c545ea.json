{"ast":null,"code":"var _jsxFileName = \"/Users/tapaswineesethy/Desktop/Tapaswinee/cart/cart/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n// Importing React and the useState hook for managing state in the component.\n\nimport \"./cart/cart.css\";\n// Importing the CSS file for styling. The styles will be applied to the elements in this component.\n\nimport Accordion from \"./cart/Accordion\";\n// Importing the Accordion component, which will handle the category and subcategory selection.\n\nimport ProductTile from \"./cart/ProductTile\";\n// Importing the ProductTile component, which will be used to display individual products.\n\nimport Header from \"./cart/Header\";\n// Importing the Header component, which will display the cart count and other potential header elements.\n\nimport { categories } from \"./cart/constants\";\n// Importing the categories data from a constants file. This is a list of categories, each containing subcategories and products.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  var _categories$find$subc;\n  // Defining the main App component.\n\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  // State to keep track of the selected category. Initially, no category is selected (null).\n\n  const [selectedSubcategory, setSelectedSubcategory] = useState(null);\n  // State to keep track of the selected subcategory. Initially, no subcategory is selected (null).\n\n  const [cartCount, setCartCount] = useState(0);\n  // State to keep track of the number of items in the cart. Initially, the cart is empty (0).\n\n  const handleCategorySelect = categoryName => {\n    // Function to handle when a category is selected.\n    setSelectedCategory(categoryName === selectedCategory ? null : categoryName);\n    // If the selected category is the same as the current one, deselect it (set to null). Otherwise, set it as the selected category.\n    setSelectedSubcategory(null);\n    // Reset the selected subcategory whenever a new category is selected.\n  };\n  const handleSubcategorySelect = subcategoryName => {\n    // Function to handle when a subcategory is selected.\n    setSelectedSubcategory(subcategoryName === selectedSubcategory ? null : subcategoryName);\n    // If the selected subcategory is the same as the current one, deselect it (set to null). Otherwise, set it as the selected subcategory.\n  };\n  const handleAddToCart = () => {\n    // Function to handle adding items to the cart.\n    setCartCount(cartCount + 1);\n    // Increment the cart count by 1 each time an item is added.\n  };\n\n  // Find the products based on the selected subcategory\n  const productsToShow = selectedCategory && ((_categories$find$subc = categories.find(cat => cat.name === selectedCategory)\n  // Find the category object that matches the selectedCategory state.\n  .subcategories.find(sub => sub.name === selectedSubcategory)) === null || _categories$find$subc === void 0 ? void 0 : _categories$find$subc.items);\n  // Within the selected category, find the subcategory that matches the selectedSubcategory state.\n  // If found, return its items; otherwise, return undefined (no products to show).\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      cartCount: cartCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(Accordion, {\n        categories: categories,\n        selectedCategory: selectedCategory,\n        selectedSubcategory: selectedSubcategory,\n        onCategorySelect: handleCategorySelect,\n        onSubcategorySelect: handleSubcategorySelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"products\",\n        children: [!selectedCategory && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Please select a category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), selectedCategory && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: selectedSubcategory || selectedCategory\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), productsToShow && productsToShow.map(product => /*#__PURE__*/_jsxDEV(ProductTile, {\n          product: product,\n          onAddToCart: handleAddToCart\n        }, product.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"8HhfQp3rA3byKEYjvAxdQMY3POw=\");\n_c = App;\nexport default App;\n// Exporting the App component as the default export of this module.\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Accordion","ProductTile","Header","categories","jsxDEV","_jsxDEV","App","_s","_categories$find$subc","selectedCategory","setSelectedCategory","selectedSubcategory","setSelectedSubcategory","cartCount","setCartCount","handleCategorySelect","categoryName","handleSubcategorySelect","subcategoryName","handleAddToCart","productsToShow","find","cat","name","subcategories","sub","items","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onCategorySelect","onSubcategorySelect","map","product","onAddToCart","id","_c","$RefreshReg$"],"sources":["/Users/tapaswineesethy/Desktop/Tapaswinee/cart/cart/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n// Importing React and the useState hook for managing state in the component.\n\nimport \"./cart/cart.css\";\n// Importing the CSS file for styling. The styles will be applied to the elements in this component.\n\nimport Accordion from \"./cart/Accordion\";\n// Importing the Accordion component, which will handle the category and subcategory selection.\n\nimport ProductTile from \"./cart/ProductTile\";\n// Importing the ProductTile component, which will be used to display individual products.\n\nimport Header from \"./cart/Header\";\n// Importing the Header component, which will display the cart count and other potential header elements.\n\nimport { categories } from \"./cart/constants\";\n// Importing the categories data from a constants file. This is a list of categories, each containing subcategories and products.\n\nconst App = () => {\n  // Defining the main App component.\n\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  // State to keep track of the selected category. Initially, no category is selected (null).\n\n  const [selectedSubcategory, setSelectedSubcategory] = useState(null);\n  // State to keep track of the selected subcategory. Initially, no subcategory is selected (null).\n\n  const [cartCount, setCartCount] = useState(0);\n  // State to keep track of the number of items in the cart. Initially, the cart is empty (0).\n\n  const handleCategorySelect = (categoryName) => {\n    // Function to handle when a category is selected.\n    setSelectedCategory(\n      categoryName === selectedCategory ? null : categoryName\n    );\n    // If the selected category is the same as the current one, deselect it (set to null). Otherwise, set it as the selected category.\n    setSelectedSubcategory(null);\n    // Reset the selected subcategory whenever a new category is selected.\n  };\n\n  const handleSubcategorySelect = (subcategoryName) => {\n    // Function to handle when a subcategory is selected.\n    setSelectedSubcategory(\n      subcategoryName === selectedSubcategory ? null : subcategoryName\n    );\n    // If the selected subcategory is the same as the current one, deselect it (set to null). Otherwise, set it as the selected subcategory.\n  };\n\n  const handleAddToCart = () => {\n    // Function to handle adding items to the cart.\n    setCartCount(cartCount + 1);\n    // Increment the cart count by 1 each time an item is added.\n  };\n\n  // Find the products based on the selected subcategory\n  const productsToShow =\n    selectedCategory &&\n    categories\n      .find((cat) => cat.name === selectedCategory)\n      // Find the category object that matches the selectedCategory state.\n      .subcategories.find((sub) => sub.name === selectedSubcategory)?.items;\n  // Within the selected category, find the subcategory that matches the selectedSubcategory state.\n  // If found, return its items; otherwise, return undefined (no products to show).\n\n  return (\n    <div className=\"app\">\n      {/* Main container for the application */}\n      <Header cartCount={cartCount} />\n      {/* Render the Header component, passing the current cartCount as a prop */}\n      <div className=\"content\">\n        {/* Container for the main content of the app */}\n        <Accordion\n          categories={categories}\n          selectedCategory={selectedCategory}\n          selectedSubcategory={selectedSubcategory}\n          onCategorySelect={handleCategorySelect}\n          onSubcategorySelect={handleSubcategorySelect}\n        />\n        {/* Render the Accordion component, passing the necessary state and handler functions as props */}\n        <div className=\"products\">\n          {/* Container for displaying products */}\n          {!selectedCategory && (\n            <div className=\"category-header\">\n              <h2>Please select a category</h2>\n            </div>\n          )}\n          {/* If no category is selected, prompt the user to select a category */}\n          {selectedCategory && (\n            <div className=\"category-header\">\n              <h2>{selectedSubcategory || selectedCategory}</h2>\n            </div>\n          )}\n          {/* If a category is selected, display the name of the selected subcategory or the category itself */}\n          {productsToShow &&\n            productsToShow.map((product) => (\n              <ProductTile\n                key={product.id}\n                product={product}\n                onAddToCart={handleAddToCart}\n              />\n            ))}\n          {/* If there are products to show (based on the selected subcategory), render a ProductTile for each product */}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n// Exporting the App component as the default export of this module.\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}