{"ast":null,"code":"var _jsxFileName = \"/Users/tapaswineesethy/Documents/GitHub/eShopping/src/cart/Accordion.js\";\nimport React from \"react\";\n// Importing React to use JSX and component functionality.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Accordion = ({\n  categories,\n  selectedCategory,\n  selectedSubcategory,\n  onCategorySelect,\n  onSubcategorySelect\n}) => {\n  // Destructuring props passed to the Accordion component:\n  // - categories: the list of categories to display\n  // - selectedCategory: the currently selected category\n  // - selectedSubcategory: the currently selected subcategory\n  // - onCategorySelect: function to call when a category is selected\n  // - onSubcategorySelect: function to call when a subcategory is selected\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"accordion\",\n    children: categories.map((category, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"accordion-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `accordion-category ${selectedCategory === category.name ? \"expanded\" : \"\"}`\n          // Applying a CSS class to indicate if the category is expanded (selected)\n          ,\n          onClick: () => onCategorySelect(category.name)\n          // When the category button is clicked, call onCategorySelect with the category's name\n          ,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"icon-box\",\n            children: selectedCategory === category.name ? \"-\" : \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"accordion-label\",\n            children: category.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), selectedCategory === category.name && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"accordion-content\",\n          children: category.subcategories.map(subcategory => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `accordion-subcategory ${selectedSubcategory === subcategory.name ? \"highlight\" : \"\"}`\n            // Applying a CSS class to highlight the selected subcategory\n            ,\n            onClick: () => onSubcategorySelect(subcategory.name)\n            // When a subcategory is clicked, call onSubcategorySelect with the subcategory's name\n            ,\n            children: subcategory.name\n          }, subcategory.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_c = Accordion;\nexport default Accordion;\n// Exporting the Accordion component as the default export.\nvar _c;\n$RefreshReg$(_c, \"Accordion\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Accordion","categories","selectedCategory","selectedSubcategory","onCategorySelect","onSubcategorySelect","className","children","map","category","index","Fragment","name","onClick","fileName","_jsxFileName","lineNumber","columnNumber","subcategories","subcategory","_c","$RefreshReg$"],"sources":["/Users/tapaswineesethy/Documents/GitHub/eShopping/src/cart/Accordion.js"],"sourcesContent":["import React from \"react\";\n// Importing React to use JSX and component functionality.\n\nconst Accordion = ({\n  categories,\n  selectedCategory,\n  selectedSubcategory,\n  onCategorySelect,\n  onSubcategorySelect,\n}) => {\n  // Destructuring props passed to the Accordion component:\n  // - categories: the list of categories to display\n  // - selectedCategory: the currently selected category\n  // - selectedSubcategory: the currently selected subcategory\n  // - onCategorySelect: function to call when a category is selected\n  // - onSubcategorySelect: function to call when a subcategory is selected\n\n  return (\n    <div className=\"accordion\">\n      {/* Main container for the accordion */}\n      {categories.map((category, index) => (\n        <React.Fragment key={index}>\n          {/* Looping through each category in the categories array */}\n          <div className=\"accordion-item\">\n            {/* Container for each accordion item */}\n            <button\n              className={`accordion-category ${\n                selectedCategory === category.name ? \"expanded\" : \"\"\n              }`}\n              // Applying a CSS class to indicate if the category is expanded (selected)\n              onClick={() => onCategorySelect(category.name)}\n              // When the category button is clicked, call onCategorySelect with the category's name\n            >\n              <span className=\"icon-box\">\n                {selectedCategory === category.name ? \"-\" : \"+\"}\n              </span>\n              {/* Displaying a \"-\" if the category is expanded, otherwise a \"+\" */}\n              <span className=\"accordion-label\">{category.name}</span>\n              {/* Displaying the name of the category */}\n            </button>\n            {selectedCategory === category.name && (\n              <div className=\"accordion-content\">\n                {/* Only show this content if the current category is selected */}\n                {category.subcategories.map((subcategory) => (\n                  <div\n                    key={subcategory.name}\n                    className={`accordion-subcategory ${\n                      selectedSubcategory === subcategory.name\n                        ? \"highlight\"\n                        : \"\"\n                    }`}\n                    // Applying a CSS class to highlight the selected subcategory\n                    onClick={() => onSubcategorySelect(subcategory.name)}\n                    // When a subcategory is clicked, call onSubcategorySelect with the subcategory's name\n                  >\n                    {subcategory.name}\n                    {/* Displaying the name of the subcategory */}\n                  </div>\n                ))}\n                {/* Looping through and displaying subcategories of the selected category */}\n              </div>\n            )}\n          </div>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n};\n\nexport default Accordion;\n// Exporting the Accordion component as the default export.\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,SAAS,GAAGA,CAAC;EACjBC,UAAU;EACVC,gBAAgB;EAChBC,mBAAmB;EACnBC,gBAAgB;EAChBC;AACF,CAAC,KAAK;EACJ;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACEN,OAAA;IAAKO,SAAS,EAAC,WAAW;IAAAC,QAAA,EAEvBN,UAAU,CAACO,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAC9BX,OAAA,CAACF,KAAK,CAACc,QAAQ;MAAAJ,QAAA,eAEbR,OAAA;QAAKO,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAE7BR,OAAA;UACEO,SAAS,EAAE,sBACTJ,gBAAgB,KAAKO,QAAQ,CAACG,IAAI,GAAG,UAAU,GAAG,EAAE;UAEtD;UAAA;UACAC,OAAO,EAAEA,CAAA,KAAMT,gBAAgB,CAACK,QAAQ,CAACG,IAAI;UAC7C;UAAA;UAAAL,QAAA,gBAEAR,OAAA;YAAMO,SAAS,EAAC,UAAU;YAAAC,QAAA,EACvBL,gBAAgB,KAAKO,QAAQ,CAACG,IAAI,GAAG,GAAG,GAAG;UAAG;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3C,CAAC,eAEPlB,OAAA;YAAMO,SAAS,EAAC,iBAAiB;YAAAC,QAAA,EAAEE,QAAQ,CAACG;UAAI;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAElD,CAAC,EACRf,gBAAgB,KAAKO,QAAQ,CAACG,IAAI,iBACjCb,OAAA;UAAKO,SAAS,EAAC,mBAAmB;UAAAC,QAAA,EAE/BE,QAAQ,CAACS,aAAa,CAACV,GAAG,CAAEW,WAAW,iBACtCpB,OAAA;YAEEO,SAAS,EAAE,yBACTH,mBAAmB,KAAKgB,WAAW,CAACP,IAAI,GACpC,WAAW,GACX,EAAE;YAER;YAAA;YACAC,OAAO,EAAEA,CAAA,KAAMR,mBAAmB,CAACc,WAAW,CAACP,IAAI;YACnD;YAAA;YAAAL,QAAA,EAECY,WAAW,CAACP;UAAI,GAVZO,WAAW,CAACP,IAAI;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAYlB,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEC,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC,GAzCaP,KAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OA0CV,CACjB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACG,EAAA,GAhEIpB,SAAS;AAkEf,eAAeA,SAAS;AACxB;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}